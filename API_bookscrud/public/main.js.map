{"version":3,"sources":["./src/app/service/crud.service.ts","./src/app/components/add-book/add-book.component.ts","./src/app/components/add-book/add-book.component.html","./src/app/components/books-list/books-list.component.html","./src/app/components/books-list/books-list.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/book-detail/book-detail.component.ts","./src/app/components/book-detail/book-detail.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Book } from './Book';\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CrudService {\n  // Node/Express API\n  REST_API: string = 'http://localhost:8000/api';\n\n  // Http Header\n  httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private httpClient: HttpClient) {}\n\n  // Add\n  AddBook(data: Book): Observable<any> {\n    let API_URL = `${this.REST_API}/add-book`;\n    return this.httpClient\n      .post(API_URL, data)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Get all objects\n  GetBooks() {\n    return this.httpClient.get(`${this.REST_API}`);\n  }\n\n  // Get single object\n  GetBook(id: any): Observable<any> {\n    let API_URL = `${this.REST_API}/read-book/${id}`;\n    return this.httpClient.get(API_URL, { headers: this.httpHeaders }).pipe(\n      map((res: any) => {\n        return res || {};\n      }),\n      catchError(this.handleError)\n    );\n  }\n\n  // Update\n  updateBook(id: any, data: any): Observable<any> {\n    let API_URL = `${this.REST_API}/update-book/${id}`;\n    return this.httpClient\n      .put(API_URL, data, { headers: this.httpHeaders })\n      .pipe(catchError(this.handleError));\n  }\n\n  // Delete\n  deleteBook(id: any): Observable<any> {\n    let API_URL = `${this.REST_API}/delete-book/${id}`;\n    return this.httpClient\n      .delete(API_URL, { headers: this.httpHeaders })\n      .pipe(catchError(this.handleError));\n  }\n\n  // Error\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Handle client error\n      errorMessage = error.error.message;\n    } else {\n      // Handle server error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CrudService } from './../../service/crud.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.scss'],\n})\nexport class AddBookComponent implements OnInit {\n  bookForm: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private crudService: CrudService\n  ) {\n    this.bookForm = this.formBuilder.group({\n      name: [''],\n      price: [''],\n      description: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  onSubmit(): any {\n    this.crudService.AddBook(this.bookForm.value).subscribe(\n      () => {\n        console.log('Data added successfully!');\n        this.ngZone.run(() => this.router.navigateByUrl('/books-list'));\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n}\n","<div class=\"row justify-content-center mt-5\">\n  <div class=\"col-md-4\">\n    <form [formGroup]=\"bookForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          formControlName=\"name\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Price</label>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          formControlName=\"price\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Description</label>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          formControlName=\"description\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\" type=\"submit\">\n          Add Book\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"container\">\n    <div\n      class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\"\n    >\n      <h2 class=\"h2\">Books List</h2>\n    </div>\n  \n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Price</th>\n            <th scope=\"col\">Description</th>\n            <th class=\"text-center\" scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let book of Books; let i = index\">\n            <th scope=\"row\">{{ book._id }}</th>\n            <td>{{ book.name }}</td>\n            <td>{{ book.price }}</td>\n            <td>{{ book.description }}</td>\n            <td class=\"text-center\">\n              <button\n                class=\"btn btn-sm btn-primary\"\n                routerLink=\"/edit-book/{{ book._id }}\"\n              >\n                Edit\n              </button>\n              <button class=\"btn btn-sm btn-danger\" (click)=\"delete(book._id, i)\">\n                Delete\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from './../../service/crud.service';\n\n@Component({\n  selector: 'app-books-list',\n  templateUrl: './books-list.component.html',\n  styleUrls: ['./books-list.component.scss'],\n})\nexport class BooksListComponent implements OnInit {\n  Books: any = [];\n\n  constructor(private crudService: CrudService) {}\n\n  ngOnInit(): void {\n    this.crudService.GetBooks().subscribe((res) => {\n      console.log(res);\n      this.Books = res;\n    });\n  }\n\n  delete(id: any, i: any) {\n    console.log(id);\n    if (window.confirm('Do you want to go ahead?')) {\n      this.crudService.deleteBook(id).subscribe((res) => {\n        this.Books.splice(i, 1);\n      });\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Book App';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\">Angular 11 CRUD Operations Demo</a>\n\n  <div id=\"navbarNav\" class=\"collapse navbar-collapse\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/books-list\"\n          >Show Books</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/add-book\"\n          >Add Books</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n","// app.module.ts\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AddBookComponent } from './components/add-book/add-book.component';\nimport { BookDetailComponent } from './components/book-detail/book-detail.component';\nimport { BooksListComponent } from './components/books-list/books-list.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddBookComponent,\n    BookDetailComponent,\n    BooksListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CrudService } from './../../service/crud.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-detail',\n  templateUrl: './book-detail.component.html',\n  styleUrls: ['./book-detail.component.scss'],\n})\nexport class BookDetailComponent implements OnInit {\n  getId: any;\n  updateForm: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private activatedRoute: ActivatedRoute,\n    private crudService: CrudService\n  ) {\n    this.getId = this.activatedRoute.snapshot.paramMap.get('id');\n\n    this.crudService.GetBook(this.getId).subscribe((res) => {\n      this.updateForm.setValue({\n        name: res['name'],\n        price: res['price'],\n        description: res['description'],\n      });\n    });\n\n    this.updateForm = this.formBuilder.group({\n      name: [''],\n      price: [''],\n      description: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  onUpdate(): any {\n    this.crudService.updateBook(this.getId, this.updateForm.value).subscribe(\n      () => {\n        console.log('Data updated successfully!');\n        this.ngZone.run(() => this.router.navigateByUrl('/books-list'));\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n}\n","<div class=\"row justify-content-center mt-5\">\n  <div class=\"col-md-4\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"onUpdate()\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          formControlName=\"name\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Price</label>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          formControlName=\"price\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Description</label>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          formControlName=\"description\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\" type=\"submit\">Update</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BooksListComponent } from './components/books-list/books-list.component';\nimport { AddBookComponent } from './components/add-book/add-book.component';\nimport { BookDetailComponent } from './components/book-detail/book-detail.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'add-book' },\n  { path: 'books-list', component: BooksListComponent },\n  { path: 'add-book', component: AddBookComponent },\n  { path: 'edit-book/:id', component: BookDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}